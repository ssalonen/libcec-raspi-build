on: workflow_dispatch

name: Build libcec

env:
  libcec_version: 6.0.2  # version of libcec this fork is based on


jobs:
  build-libcec:
    name: Build libcec
    runs-on:  [self-hosted, armv7, raspi]
    steps:
      - name: Install libcec(-dev) and build dependencies
        run: |
            set -ex
            sudo apt-get update
            sudo apt install -yq libp8-platform-dev libp8-platform2 cmake libudev-dev libxrandr-dev python3-dev swig git
      - name: Prepare build directory
        run: |
            set -ex
            sudo rm -rf /tmp/libcec-build-tmp
            sudo mkdir /tmp/libcec-build-tmp

      - name: Checkout libcec
        working-directory: /tmp/libcec-build-tmp
        run: |
          set -ex
          rm -rf /tmp/libcec-build-tmp
          mkdir /tmp/libcec-build-tmp
          git clone --recursive --branch libcec-${{ env.libcec_version }} https://github.com/Pulse-Eight/libcec.git /tmp/libcec-build-tmp/libcec

      - name: Build libcec (with RPi feature, unlike the one from apt repo)
        working-directory: /tmp/libcec-build-tmp/libcec/build
        run: |
          set -ex
          cmake -DRPI_INCLUDE_DIR=/opt/vc/include -DRPI_LIB_DIR=/opt/vc/lib ..
          make -j4

      - name: Collect binaries and headers
        working-directory: /tmp/libcec-build-tmp/libcec/build
        run: |
          mkdir -p dist/include
          find src/libcec \( \! -name '_*' -a \(  -name '*.a' -o -name '*.so' -o -name '*.dylib' \) \) -print -exec cp {} dist \;
          find ../include -name '*.h' -print -exec cp {} dist/include \;

      - name: Set output
        id: build_output
        shell: bash
        run: echo "binary_path=/tmp/libcec-build-tmp/libcec/build/dist" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libcec-${{ env.libcec_version }}-armv7-unknown-linux-gnueabihf
          path: ${{ steps.build_output.outputs.binary_path }}
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: [build-libcec]
    steps:
      - name: Fetch build artifacts
        uses: actions/download-artifact@v4
        with:
          path: assets

      - name: Compress build artifacts
        working-directory: assets
        run: |
          mkdir --verbose ../release
          find * -maxdepth 0 -type d  -print -exec zip -vr ../release/{}.zip {} \;

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: libcec-v${{ env.libcec_version }}
          files: release/*.zip
          fail_on_unmatched_files: true
          make_latest: true
          body: >
            This release includes automated [libcec](https://github.com/Pulse-Eight/libcec)
            builds for version ${{ env.libcec_version }}.